// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.29.3
// source: proto/monitor/monitor.proto

package monitor

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MonitoringCommand_CommandType int32

const (
	MonitoringCommand_START_MONITORING  MonitoringCommand_CommandType = 0
	MonitoringCommand_STOP_MONITORING   MonitoringCommand_CommandType = 1
	MonitoringCommand_PAUSE_MONITORING  MonitoringCommand_CommandType = 2
	MonitoringCommand_RESUME_MONITORING MonitoringCommand_CommandType = 3
	MonitoringCommand_FLUSH_LOGS        MonitoringCommand_CommandType = 4
	MonitoringCommand_RESTART_CLIENT    MonitoringCommand_CommandType = 5
)

// Enum value maps for MonitoringCommand_CommandType.
var (
	MonitoringCommand_CommandType_name = map[int32]string{
		0: "START_MONITORING",
		1: "STOP_MONITORING",
		2: "PAUSE_MONITORING",
		3: "RESUME_MONITORING",
		4: "FLUSH_LOGS",
		5: "RESTART_CLIENT",
	}
	MonitoringCommand_CommandType_value = map[string]int32{
		"START_MONITORING":  0,
		"STOP_MONITORING":   1,
		"PAUSE_MONITORING":  2,
		"RESUME_MONITORING": 3,
		"FLUSH_LOGS":        4,
		"RESTART_CLIENT":    5,
	}
)

func (x MonitoringCommand_CommandType) Enum() *MonitoringCommand_CommandType {
	p := new(MonitoringCommand_CommandType)
	*p = x
	return p
}

func (x MonitoringCommand_CommandType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MonitoringCommand_CommandType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_monitor_monitor_proto_enumTypes[0].Descriptor()
}

func (MonitoringCommand_CommandType) Type() protoreflect.EnumType {
	return &file_proto_monitor_monitor_proto_enumTypes[0]
}

func (x MonitoringCommand_CommandType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MonitoringCommand_CommandType.Descriptor instead.
func (MonitoringCommand_CommandType) EnumDescriptor() ([]byte, []int) {
	return file_proto_monitor_monitor_proto_rawDescGZIP(), []int{11, 0}
}

// Client -> Server messages
type ClientMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Message:
	//
	//	*ClientMessage_Connect
	//	*ClientMessage_Heartbeat
	//	*ClientMessage_ScreenshotResponse
	//	*ClientMessage_Ack
	//	*ClientMessage_VideoCaptureResponse
	Message       isClientMessage_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientMessage) Reset() {
	*x = ClientMessage{}
	mi := &file_proto_monitor_monitor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMessage) ProtoMessage() {}

func (x *ClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitor_monitor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMessage.ProtoReflect.Descriptor instead.
func (*ClientMessage) Descriptor() ([]byte, []int) {
	return file_proto_monitor_monitor_proto_rawDescGZIP(), []int{0}
}

func (x *ClientMessage) GetMessage() isClientMessage_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ClientMessage) GetConnect() *ClientConnect {
	if x != nil {
		if x, ok := x.Message.(*ClientMessage_Connect); ok {
			return x.Connect
		}
	}
	return nil
}

func (x *ClientMessage) GetHeartbeat() *ClientHeartbeat {
	if x != nil {
		if x, ok := x.Message.(*ClientMessage_Heartbeat); ok {
			return x.Heartbeat
		}
	}
	return nil
}

func (x *ClientMessage) GetScreenshotResponse() *ScreenshotResponse {
	if x != nil {
		if x, ok := x.Message.(*ClientMessage_ScreenshotResponse); ok {
			return x.ScreenshotResponse
		}
	}
	return nil
}

func (x *ClientMessage) GetAck() *ClientAck {
	if x != nil {
		if x, ok := x.Message.(*ClientMessage_Ack); ok {
			return x.Ack
		}
	}
	return nil
}

func (x *ClientMessage) GetVideoCaptureResponse() *VideoCaptureResponse {
	if x != nil {
		if x, ok := x.Message.(*ClientMessage_VideoCaptureResponse); ok {
			return x.VideoCaptureResponse
		}
	}
	return nil
}

type isClientMessage_Message interface {
	isClientMessage_Message()
}

type ClientMessage_Connect struct {
	Connect *ClientConnect `protobuf:"bytes,1,opt,name=connect,proto3,oneof"`
}

type ClientMessage_Heartbeat struct {
	Heartbeat *ClientHeartbeat `protobuf:"bytes,2,opt,name=heartbeat,proto3,oneof"`
}

type ClientMessage_ScreenshotResponse struct {
	ScreenshotResponse *ScreenshotResponse `protobuf:"bytes,3,opt,name=screenshot_response,json=screenshotResponse,proto3,oneof"`
}

type ClientMessage_Ack struct {
	Ack *ClientAck `protobuf:"bytes,4,opt,name=ack,proto3,oneof"`
}

type ClientMessage_VideoCaptureResponse struct {
	VideoCaptureResponse *VideoCaptureResponse `protobuf:"bytes,5,opt,name=video_capture_response,json=videoCaptureResponse,proto3,oneof"`
}

func (*ClientMessage_Connect) isClientMessage_Message() {}

func (*ClientMessage_Heartbeat) isClientMessage_Message() {}

func (*ClientMessage_ScreenshotResponse) isClientMessage_Message() {}

func (*ClientMessage_Ack) isClientMessage_Message() {}

func (*ClientMessage_VideoCaptureResponse) isClientMessage_Message() {}

type ClientConnect struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MacAddress    string                 `protobuf:"bytes,2,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	Domain        string                 `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	ClientVersion string                 `protobuf:"bytes,4,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientConnect) Reset() {
	*x = ClientConnect{}
	mi := &file_proto_monitor_monitor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientConnect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientConnect) ProtoMessage() {}

func (x *ClientConnect) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitor_monitor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientConnect.ProtoReflect.Descriptor instead.
func (*ClientConnect) Descriptor() ([]byte, []int) {
	return file_proto_monitor_monitor_proto_rawDescGZIP(), []int{1}
}

func (x *ClientConnect) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ClientConnect) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *ClientConnect) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ClientConnect) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

type ClientHeartbeat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientHeartbeat) Reset() {
	*x = ClientHeartbeat{}
	mi := &file_proto_monitor_monitor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientHeartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientHeartbeat) ProtoMessage() {}

func (x *ClientHeartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitor_monitor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientHeartbeat.ProtoReflect.Descriptor instead.
func (*ClientHeartbeat) Descriptor() ([]byte, []int) {
	return file_proto_monitor_monitor_proto_rawDescGZIP(), []int{2}
}

func (x *ClientHeartbeat) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type ScreenshotResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RequestId      string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Success        bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ScreenshotPath string                 `protobuf:"bytes,3,opt,name=screenshot_path,json=screenshotPath,proto3" json:"screenshot_path,omitempty"`
	ErrorMessage   string                 `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	ScreenshotData []byte                 `protobuf:"bytes,5,opt,name=screenshot_data,json=screenshotData,proto3" json:"screenshot_data,omitempty"` // Optional: send screenshot data directly
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ScreenshotResponse) Reset() {
	*x = ScreenshotResponse{}
	mi := &file_proto_monitor_monitor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScreenshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenshotResponse) ProtoMessage() {}

func (x *ScreenshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitor_monitor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenshotResponse.ProtoReflect.Descriptor instead.
func (*ScreenshotResponse) Descriptor() ([]byte, []int) {
	return file_proto_monitor_monitor_proto_rawDescGZIP(), []int{3}
}

func (x *ScreenshotResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ScreenshotResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ScreenshotResponse) GetScreenshotPath() string {
	if x != nil {
		return x.ScreenshotPath
	}
	return ""
}

func (x *ScreenshotResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ScreenshotResponse) GetScreenshotData() []byte {
	if x != nil {
		return x.ScreenshotData
	}
	return nil
}

type ClientAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientAck) Reset() {
	*x = ClientAck{}
	mi := &file_proto_monitor_monitor_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientAck) ProtoMessage() {}

func (x *ClientAck) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitor_monitor_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientAck.ProtoReflect.Descriptor instead.
func (*ClientAck) Descriptor() ([]byte, []int) {
	return file_proto_monitor_monitor_proto_rawDescGZIP(), []int{4}
}

func (x *ClientAck) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *ClientAck) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Server -> Client messages
type ServerMessage struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	MessageId string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // Unique ID for tracking acknowledgments
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are valid to be assigned to Message:
	//
	//	*ServerMessage_AttendanceUpdate
	//	*ServerMessage_ScreenshotCommand
	//	*ServerMessage_ConfigUpdate
	//	*ServerMessage_MonitoringCommand
	//	*ServerMessage_VideoCaptureCommand
	Message       isServerMessage_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerMessage) Reset() {
	*x = ServerMessage{}
	mi := &file_proto_monitor_monitor_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage) ProtoMessage() {}

func (x *ServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitor_monitor_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage.ProtoReflect.Descriptor instead.
func (*ServerMessage) Descriptor() ([]byte, []int) {
	return file_proto_monitor_monitor_proto_rawDescGZIP(), []int{5}
}

func (x *ServerMessage) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *ServerMessage) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ServerMessage) GetMessage() isServerMessage_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ServerMessage) GetAttendanceUpdate() *AttendanceUpdate {
	if x != nil {
		if x, ok := x.Message.(*ServerMessage_AttendanceUpdate); ok {
			return x.AttendanceUpdate
		}
	}
	return nil
}

func (x *ServerMessage) GetScreenshotCommand() *ScreenshotCommand {
	if x != nil {
		if x, ok := x.Message.(*ServerMessage_ScreenshotCommand); ok {
			return x.ScreenshotCommand
		}
	}
	return nil
}

func (x *ServerMessage) GetConfigUpdate() *ConfigUpdate {
	if x != nil {
		if x, ok := x.Message.(*ServerMessage_ConfigUpdate); ok {
			return x.ConfigUpdate
		}
	}
	return nil
}

func (x *ServerMessage) GetMonitoringCommand() *MonitoringCommand {
	if x != nil {
		if x, ok := x.Message.(*ServerMessage_MonitoringCommand); ok {
			return x.MonitoringCommand
		}
	}
	return nil
}

func (x *ServerMessage) GetVideoCaptureCommand() *VideoCaptureCommand {
	if x != nil {
		if x, ok := x.Message.(*ServerMessage_VideoCaptureCommand); ok {
			return x.VideoCaptureCommand
		}
	}
	return nil
}

type isServerMessage_Message interface {
	isServerMessage_Message()
}

type ServerMessage_AttendanceUpdate struct {
	AttendanceUpdate *AttendanceUpdate `protobuf:"bytes,3,opt,name=attendance_update,json=attendanceUpdate,proto3,oneof"`
}

type ServerMessage_ScreenshotCommand struct {
	ScreenshotCommand *ScreenshotCommand `protobuf:"bytes,4,opt,name=screenshot_command,json=screenshotCommand,proto3,oneof"`
}

type ServerMessage_ConfigUpdate struct {
	ConfigUpdate *ConfigUpdate `protobuf:"bytes,5,opt,name=config_update,json=configUpdate,proto3,oneof"`
}

type ServerMessage_MonitoringCommand struct {
	MonitoringCommand *MonitoringCommand `protobuf:"bytes,6,opt,name=monitoring_command,json=monitoringCommand,proto3,oneof"`
}

type ServerMessage_VideoCaptureCommand struct {
	VideoCaptureCommand *VideoCaptureCommand `protobuf:"bytes,7,opt,name=video_capture_command,json=videoCaptureCommand,proto3,oneof"`
}

func (*ServerMessage_AttendanceUpdate) isServerMessage_Message() {}

func (*ServerMessage_ScreenshotCommand) isServerMessage_Message() {}

func (*ServerMessage_ConfigUpdate) isServerMessage_Message() {}

func (*ServerMessage_MonitoringCommand) isServerMessage_Message() {}

func (*ServerMessage_VideoCaptureCommand) isServerMessage_Message() {}

type AttendanceUpdate struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	UserId            string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsCheckedIn       bool                   `protobuf:"varint,2,opt,name=is_checked_in,json=isCheckedIn,proto3" json:"is_checked_in,omitempty"`
	IsCheckedOut      bool                   `protobuf:"varint,3,opt,name=is_checked_out,json=isCheckedOut,proto3" json:"is_checked_out,omitempty"`
	CheckInTimestamp  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=check_in_timestamp,json=checkInTimestamp,proto3" json:"check_in_timestamp,omitempty"`
	CheckOutTimestamp *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=check_out_timestamp,json=checkOutTimestamp,proto3" json:"check_out_timestamp,omitempty"`
	CheckInSource     string                 `protobuf:"bytes,6,opt,name=check_in_source,json=checkInSource,proto3" json:"check_in_source,omitempty"`
	CheckOutSource    string                 `protobuf:"bytes,7,opt,name=check_out_source,json=checkOutSource,proto3" json:"check_out_source,omitempty"`
	Message           string                 `protobuf:"bytes,8,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AttendanceUpdate) Reset() {
	*x = AttendanceUpdate{}
	mi := &file_proto_monitor_monitor_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttendanceUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttendanceUpdate) ProtoMessage() {}

func (x *AttendanceUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitor_monitor_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttendanceUpdate.ProtoReflect.Descriptor instead.
func (*AttendanceUpdate) Descriptor() ([]byte, []int) {
	return file_proto_monitor_monitor_proto_rawDescGZIP(), []int{6}
}

func (x *AttendanceUpdate) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AttendanceUpdate) GetIsCheckedIn() bool {
	if x != nil {
		return x.IsCheckedIn
	}
	return false
}

func (x *AttendanceUpdate) GetIsCheckedOut() bool {
	if x != nil {
		return x.IsCheckedOut
	}
	return false
}

func (x *AttendanceUpdate) GetCheckInTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.CheckInTimestamp
	}
	return nil
}

func (x *AttendanceUpdate) GetCheckOutTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.CheckOutTimestamp
	}
	return nil
}

func (x *AttendanceUpdate) GetCheckInSource() string {
	if x != nil {
		return x.CheckInSource
	}
	return ""
}

func (x *AttendanceUpdate) GetCheckOutSource() string {
	if x != nil {
		return x.CheckOutSource
	}
	return ""
}

func (x *AttendanceUpdate) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ScreenshotCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Immediate     bool                   `protobuf:"varint,2,opt,name=immediate,proto3" json:"immediate,omitempty"` // Take screenshot immediately
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`        // Optional: reason for screenshot request
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScreenshotCommand) Reset() {
	*x = ScreenshotCommand{}
	mi := &file_proto_monitor_monitor_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScreenshotCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenshotCommand) ProtoMessage() {}

func (x *ScreenshotCommand) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitor_monitor_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenshotCommand.ProtoReflect.Descriptor instead.
func (*ScreenshotCommand) Descriptor() ([]byte, []int) {
	return file_proto_monitor_monitor_proto_rawDescGZIP(), []int{7}
}

func (x *ScreenshotCommand) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ScreenshotCommand) GetImmediate() bool {
	if x != nil {
		return x.Immediate
	}
	return false
}

func (x *ScreenshotCommand) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type VideoCaptureCommand struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RequestId       string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	DurationSeconds int32                  `protobuf:"varint,2,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"` // Duration of video recording in seconds (default: 5)
	Immediate       bool                   `protobuf:"varint,3,opt,name=immediate,proto3" json:"immediate,omitempty"`                                    // Start recording immediately
	Reason          string                 `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`                                           // Optional: reason for video capture request
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *VideoCaptureCommand) Reset() {
	*x = VideoCaptureCommand{}
	mi := &file_proto_monitor_monitor_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VideoCaptureCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoCaptureCommand) ProtoMessage() {}

func (x *VideoCaptureCommand) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitor_monitor_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoCaptureCommand.ProtoReflect.Descriptor instead.
func (*VideoCaptureCommand) Descriptor() ([]byte, []int) {
	return file_proto_monitor_monitor_proto_rawDescGZIP(), []int{8}
}

func (x *VideoCaptureCommand) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *VideoCaptureCommand) GetDurationSeconds() int32 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *VideoCaptureCommand) GetImmediate() bool {
	if x != nil {
		return x.Immediate
	}
	return false
}

func (x *VideoCaptureCommand) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type VideoCaptureResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RequestId       string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Success         bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	VideoPath       string                 `protobuf:"bytes,3,opt,name=video_path,json=videoPath,proto3" json:"video_path,omitempty"`
	ErrorMessage    string                 `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	DurationSeconds int32                  `protobuf:"varint,5,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"` // Actual duration recorded
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *VideoCaptureResponse) Reset() {
	*x = VideoCaptureResponse{}
	mi := &file_proto_monitor_monitor_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VideoCaptureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoCaptureResponse) ProtoMessage() {}

func (x *VideoCaptureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitor_monitor_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoCaptureResponse.ProtoReflect.Descriptor instead.
func (*VideoCaptureResponse) Descriptor() ([]byte, []int) {
	return file_proto_monitor_monitor_proto_rawDescGZIP(), []int{9}
}

func (x *VideoCaptureResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *VideoCaptureResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *VideoCaptureResponse) GetVideoPath() string {
	if x != nil {
		return x.VideoPath
	}
	return ""
}

func (x *VideoCaptureResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *VideoCaptureResponse) GetDurationSeconds() int32 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

type ConfigUpdate struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Config        *MonitoringConfigResponse `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	Reason        string                    `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigUpdate) Reset() {
	*x = ConfigUpdate{}
	mi := &file_proto_monitor_monitor_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigUpdate) ProtoMessage() {}

func (x *ConfigUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitor_monitor_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigUpdate.ProtoReflect.Descriptor instead.
func (*ConfigUpdate) Descriptor() ([]byte, []int) {
	return file_proto_monitor_monitor_proto_rawDescGZIP(), []int{10}
}

func (x *ConfigUpdate) GetConfig() *MonitoringConfigResponse {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ConfigUpdate) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type MonitoringCommand struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Command       MonitoringCommand_CommandType `protobuf:"varint,1,opt,name=command,proto3,enum=monitor.MonitoringCommand_CommandType" json:"command,omitempty"`
	Reason        string                        `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MonitoringCommand) Reset() {
	*x = MonitoringCommand{}
	mi := &file_proto_monitor_monitor_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonitoringCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitoringCommand) ProtoMessage() {}

func (x *MonitoringCommand) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitor_monitor_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitoringCommand.ProtoReflect.Descriptor instead.
func (*MonitoringCommand) Descriptor() ([]byte, []int) {
	return file_proto_monitor_monitor_proto_rawDescGZIP(), []int{11}
}

func (x *MonitoringCommand) GetCommand() MonitoringCommand_CommandType {
	if x != nil {
		return x.Command
	}
	return MonitoringCommand_START_MONITORING
}

func (x *MonitoringCommand) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_proto_monitor_monitor_proto protoreflect.FileDescriptor

const file_proto_monitor_monitor_proto_rawDesc = "" +
	"\n" +
	"\x1bproto/monitor/monitor.proto\x12\amonitor\x1a:proto/monitor/type/update_employee_attendance_status.proto\x1a\"proto/monitor/type/heartbeat.proto\x1a%proto/monitor/type/activity_log.proto\x1a*proto/monitor/type/monitoring_config.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xd7\x02\n" +
	"\rClientMessage\x122\n" +
	"\aconnect\x18\x01 \x01(\v2\x16.monitor.ClientConnectH\x00R\aconnect\x128\n" +
	"\theartbeat\x18\x02 \x01(\v2\x18.monitor.ClientHeartbeatH\x00R\theartbeat\x12N\n" +
	"\x13screenshot_response\x18\x03 \x01(\v2\x1b.monitor.ScreenshotResponseH\x00R\x12screenshotResponse\x12&\n" +
	"\x03ack\x18\x04 \x01(\v2\x12.monitor.ClientAckH\x00R\x03ack\x12U\n" +
	"\x16video_capture_response\x18\x05 \x01(\v2\x1d.monitor.VideoCaptureResponseH\x00R\x14videoCaptureResponseB\t\n" +
	"\amessage\"\x88\x01\n" +
	"\rClientConnect\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1f\n" +
	"\vmac_address\x18\x02 \x01(\tR\n" +
	"macAddress\x12\x16\n" +
	"\x06domain\x18\x03 \x01(\tR\x06domain\x12%\n" +
	"\x0eclient_version\x18\x04 \x01(\tR\rclientVersion\"K\n" +
	"\x0fClientHeartbeat\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\xc4\x01\n" +
	"\x12ScreenshotResponse\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12'\n" +
	"\x0fscreenshot_path\x18\x03 \x01(\tR\x0escreenshotPath\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\x12'\n" +
	"\x0fscreenshot_data\x18\x05 \x01(\fR\x0escreenshotData\"D\n" +
	"\tClientAck\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\"\xe9\x03\n" +
	"\rServerMessage\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12H\n" +
	"\x11attendance_update\x18\x03 \x01(\v2\x19.monitor.AttendanceUpdateH\x00R\x10attendanceUpdate\x12K\n" +
	"\x12screenshot_command\x18\x04 \x01(\v2\x1a.monitor.ScreenshotCommandH\x00R\x11screenshotCommand\x12<\n" +
	"\rconfig_update\x18\x05 \x01(\v2\x15.monitor.ConfigUpdateH\x00R\fconfigUpdate\x12K\n" +
	"\x12monitoring_command\x18\x06 \x01(\v2\x1a.monitor.MonitoringCommandH\x00R\x11monitoringCommand\x12R\n" +
	"\x15video_capture_command\x18\a \x01(\v2\x1c.monitor.VideoCaptureCommandH\x00R\x13videoCaptureCommandB\t\n" +
	"\amessage\"\xf7\x02\n" +
	"\x10AttendanceUpdate\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\"\n" +
	"\ris_checked_in\x18\x02 \x01(\bR\visCheckedIn\x12$\n" +
	"\x0eis_checked_out\x18\x03 \x01(\bR\fisCheckedOut\x12H\n" +
	"\x12check_in_timestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x10checkInTimestamp\x12J\n" +
	"\x13check_out_timestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x11checkOutTimestamp\x12&\n" +
	"\x0fcheck_in_source\x18\x06 \x01(\tR\rcheckInSource\x12(\n" +
	"\x10check_out_source\x18\a \x01(\tR\x0echeckOutSource\x12\x18\n" +
	"\amessage\x18\b \x01(\tR\amessage\"h\n" +
	"\x11ScreenshotCommand\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x1c\n" +
	"\timmediate\x18\x02 \x01(\bR\timmediate\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"\x95\x01\n" +
	"\x13VideoCaptureCommand\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12)\n" +
	"\x10duration_seconds\x18\x02 \x01(\x05R\x0fdurationSeconds\x12\x1c\n" +
	"\timmediate\x18\x03 \x01(\bR\timmediate\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\"\xbe\x01\n" +
	"\x14VideoCaptureResponse\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x1d\n" +
	"\n" +
	"video_path\x18\x03 \x01(\tR\tvideoPath\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\x12)\n" +
	"\x10duration_seconds\x18\x05 \x01(\x05R\x0fdurationSeconds\"a\n" +
	"\fConfigUpdate\x129\n" +
	"\x06config\x18\x01 \x01(\v2!.monitor.MonitoringConfigResponseR\x06config\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"\xf9\x01\n" +
	"\x11MonitoringCommand\x12@\n" +
	"\acommand\x18\x01 \x01(\x0e2&.monitor.MonitoringCommand.CommandTypeR\acommand\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"\x89\x01\n" +
	"\vCommandType\x12\x14\n" +
	"\x10START_MONITORING\x10\x00\x12\x13\n" +
	"\x0fSTOP_MONITORING\x10\x01\x12\x14\n" +
	"\x10PAUSE_MONITORING\x10\x02\x12\x15\n" +
	"\x11RESUME_MONITORING\x10\x03\x12\x0e\n" +
	"\n" +
	"FLUSH_LOGS\x10\x04\x12\x12\n" +
	"\x0eRESTART_CLIENT\x10\x052\x9b\x04\n" +
	"\x0eMonitorService\x12r\n" +
	"\x1bUpdateCheckInCheckoutStatus\x12'.monitor.EmployeeCheckInCheckOutRequest\x1a(.monitor.EmployeeCheckInCheckOutResponse\"\x00\x12D\n" +
	"\tHeartbeat\x12\x19.monitor.HeartbeatRequest\x1a\x1a.monitor.HeartbeatResponse\"\x00\x12N\n" +
	"\x0fSendActivityLog\x12\x1b.monitor.ActivityLogRequest\x1a\x1c.monitor.ActivityLogResponse\"\x00\x12X\n" +
	"\x14SendActivityLogBatch\x12 .monitor.ActivityLogBatchRequest\x1a\x1c.monitor.ActivityLogResponse\"\x00\x12^\n" +
	"\x15FetchMonitoringConfig\x12 .monitor.MonitoringConfigRequest\x1a!.monitor.MonitoringConfigResponse\"\x00\x12E\n" +
	"\rMonitorStream\x12\x16.monitor.ClientMessage\x1a\x16.monitor.ServerMessage\"\x00(\x010\x01B\x12Z\x10genproto/monitorb\x06proto3"

var (
	file_proto_monitor_monitor_proto_rawDescOnce sync.Once
	file_proto_monitor_monitor_proto_rawDescData []byte
)

func file_proto_monitor_monitor_proto_rawDescGZIP() []byte {
	file_proto_monitor_monitor_proto_rawDescOnce.Do(func() {
		file_proto_monitor_monitor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_monitor_monitor_proto_rawDesc), len(file_proto_monitor_monitor_proto_rawDesc)))
	})
	return file_proto_monitor_monitor_proto_rawDescData
}

var file_proto_monitor_monitor_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_monitor_monitor_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_monitor_monitor_proto_goTypes = []any{
	(MonitoringCommand_CommandType)(0),      // 0: monitor.MonitoringCommand.CommandType
	(*ClientMessage)(nil),                   // 1: monitor.ClientMessage
	(*ClientConnect)(nil),                   // 2: monitor.ClientConnect
	(*ClientHeartbeat)(nil),                 // 3: monitor.ClientHeartbeat
	(*ScreenshotResponse)(nil),              // 4: monitor.ScreenshotResponse
	(*ClientAck)(nil),                       // 5: monitor.ClientAck
	(*ServerMessage)(nil),                   // 6: monitor.ServerMessage
	(*AttendanceUpdate)(nil),                // 7: monitor.AttendanceUpdate
	(*ScreenshotCommand)(nil),               // 8: monitor.ScreenshotCommand
	(*VideoCaptureCommand)(nil),             // 9: monitor.VideoCaptureCommand
	(*VideoCaptureResponse)(nil),            // 10: monitor.VideoCaptureResponse
	(*ConfigUpdate)(nil),                    // 11: monitor.ConfigUpdate
	(*MonitoringCommand)(nil),               // 12: monitor.MonitoringCommand
	(*timestamppb.Timestamp)(nil),           // 13: google.protobuf.Timestamp
	(*MonitoringConfigResponse)(nil),        // 14: monitor.MonitoringConfigResponse
	(*EmployeeCheckInCheckOutRequest)(nil),  // 15: monitor.EmployeeCheckInCheckOutRequest
	(*HeartbeatRequest)(nil),                // 16: monitor.HeartbeatRequest
	(*ActivityLogRequest)(nil),              // 17: monitor.ActivityLogRequest
	(*ActivityLogBatchRequest)(nil),         // 18: monitor.ActivityLogBatchRequest
	(*MonitoringConfigRequest)(nil),         // 19: monitor.MonitoringConfigRequest
	(*EmployeeCheckInCheckOutResponse)(nil), // 20: monitor.EmployeeCheckInCheckOutResponse
	(*HeartbeatResponse)(nil),               // 21: monitor.HeartbeatResponse
	(*ActivityLogResponse)(nil),             // 22: monitor.ActivityLogResponse
}
var file_proto_monitor_monitor_proto_depIdxs = []int32{
	2,  // 0: monitor.ClientMessage.connect:type_name -> monitor.ClientConnect
	3,  // 1: monitor.ClientMessage.heartbeat:type_name -> monitor.ClientHeartbeat
	4,  // 2: monitor.ClientMessage.screenshot_response:type_name -> monitor.ScreenshotResponse
	5,  // 3: monitor.ClientMessage.ack:type_name -> monitor.ClientAck
	10, // 4: monitor.ClientMessage.video_capture_response:type_name -> monitor.VideoCaptureResponse
	13, // 5: monitor.ClientHeartbeat.timestamp:type_name -> google.protobuf.Timestamp
	13, // 6: monitor.ServerMessage.timestamp:type_name -> google.protobuf.Timestamp
	7,  // 7: monitor.ServerMessage.attendance_update:type_name -> monitor.AttendanceUpdate
	8,  // 8: monitor.ServerMessage.screenshot_command:type_name -> monitor.ScreenshotCommand
	11, // 9: monitor.ServerMessage.config_update:type_name -> monitor.ConfigUpdate
	12, // 10: monitor.ServerMessage.monitoring_command:type_name -> monitor.MonitoringCommand
	9,  // 11: monitor.ServerMessage.video_capture_command:type_name -> monitor.VideoCaptureCommand
	13, // 12: monitor.AttendanceUpdate.check_in_timestamp:type_name -> google.protobuf.Timestamp
	13, // 13: monitor.AttendanceUpdate.check_out_timestamp:type_name -> google.protobuf.Timestamp
	14, // 14: monitor.ConfigUpdate.config:type_name -> monitor.MonitoringConfigResponse
	0,  // 15: monitor.MonitoringCommand.command:type_name -> monitor.MonitoringCommand.CommandType
	15, // 16: monitor.MonitorService.UpdateCheckInCheckoutStatus:input_type -> monitor.EmployeeCheckInCheckOutRequest
	16, // 17: monitor.MonitorService.Heartbeat:input_type -> monitor.HeartbeatRequest
	17, // 18: monitor.MonitorService.SendActivityLog:input_type -> monitor.ActivityLogRequest
	18, // 19: monitor.MonitorService.SendActivityLogBatch:input_type -> monitor.ActivityLogBatchRequest
	19, // 20: monitor.MonitorService.FetchMonitoringConfig:input_type -> monitor.MonitoringConfigRequest
	1,  // 21: monitor.MonitorService.MonitorStream:input_type -> monitor.ClientMessage
	20, // 22: monitor.MonitorService.UpdateCheckInCheckoutStatus:output_type -> monitor.EmployeeCheckInCheckOutResponse
	21, // 23: monitor.MonitorService.Heartbeat:output_type -> monitor.HeartbeatResponse
	22, // 24: monitor.MonitorService.SendActivityLog:output_type -> monitor.ActivityLogResponse
	22, // 25: monitor.MonitorService.SendActivityLogBatch:output_type -> monitor.ActivityLogResponse
	14, // 26: monitor.MonitorService.FetchMonitoringConfig:output_type -> monitor.MonitoringConfigResponse
	6,  // 27: monitor.MonitorService.MonitorStream:output_type -> monitor.ServerMessage
	22, // [22:28] is the sub-list for method output_type
	16, // [16:22] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_proto_monitor_monitor_proto_init() }
func file_proto_monitor_monitor_proto_init() {
	if File_proto_monitor_monitor_proto != nil {
		return
	}
	file_proto_monitor_type_update_employee_attendance_status_proto_init()
	file_proto_monitor_type_heartbeat_proto_init()
	file_monitor_type_activity_log_proto_init()
	file_proto_monitor_type_monitoring_config_proto_init()
	file_proto_monitor_monitor_proto_msgTypes[0].OneofWrappers = []any{
		(*ClientMessage_Connect)(nil),
		(*ClientMessage_Heartbeat)(nil),
		(*ClientMessage_ScreenshotResponse)(nil),
		(*ClientMessage_Ack)(nil),
		(*ClientMessage_VideoCaptureResponse)(nil),
	}
	file_proto_monitor_monitor_proto_msgTypes[5].OneofWrappers = []any{
		(*ServerMessage_AttendanceUpdate)(nil),
		(*ServerMessage_ScreenshotCommand)(nil),
		(*ServerMessage_ConfigUpdate)(nil),
		(*ServerMessage_MonitoringCommand)(nil),
		(*ServerMessage_VideoCaptureCommand)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_monitor_monitor_proto_rawDesc), len(file_proto_monitor_monitor_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_monitor_monitor_proto_goTypes,
		DependencyIndexes: file_proto_monitor_monitor_proto_depIdxs,
		EnumInfos:         file_proto_monitor_monitor_proto_enumTypes,
		MessageInfos:      file_proto_monitor_monitor_proto_msgTypes,
	}.Build()
	File_proto_monitor_monitor_proto = out.File
	file_proto_monitor_monitor_proto_goTypes = nil
	file_proto_monitor_monitor_proto_depIdxs = nil
}
