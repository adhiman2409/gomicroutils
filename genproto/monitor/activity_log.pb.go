// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.29.3
// source: proto/monitor/type/activity_log.proto

package monitor

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ActivityLogRequest represents a single activity log entry
type ActivityLogRequest struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Timestamp  *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	UserId     string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name       string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	MacAddress string                 `protobuf:"bytes,4,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	Message    string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	EventType  string                 `protobuf:"bytes,6,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	Hostname   string                 `protobuf:"bytes,7,opt,name=hostname,proto3" json:"hostname,omitempty"`
	IpAddress  string                 `protobuf:"bytes,8,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	SessionId  string                 `protobuf:"bytes,9,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Domain     string                 `protobuf:"bytes,10,opt,name=domain,proto3" json:"domain,omitempty"`
	// Structured event data (only one should be populated based on event_type)
	ActivityInfo           *ActivityInfo           `protobuf:"bytes,11,opt,name=activity_info,json=activityInfo,proto3" json:"activity_info,omitempty"`
	UserActivityInfo       *UserActivityInfo       `protobuf:"bytes,12,opt,name=user_activity_info,json=userActivityInfo,proto3" json:"user_activity_info,omitempty"`
	SystemStatusInfo       *SystemStatusInfo       `protobuf:"bytes,13,opt,name=system_status_info,json=systemStatusInfo,proto3" json:"system_status_info,omitempty"`
	UsbDeviceInfo          *USBDeviceInfo          `protobuf:"bytes,14,opt,name=usb_device_info,json=usbDeviceInfo,proto3" json:"usb_device_info,omitempty"`
	LocationInfo           *LocationInfo           `protobuf:"bytes,15,opt,name=location_info,json=locationInfo,proto3" json:"location_info,omitempty"`
	NetworkStatus          *NetworkStatus          `protobuf:"bytes,16,opt,name=network_status,json=networkStatus,proto3" json:"network_status,omitempty"`
	ScreenshotInfo         *ScreenshotInfo         `protobuf:"bytes,17,opt,name=screenshot_info,json=screenshotInfo,proto3" json:"screenshot_info,omitempty"`
	VideoInfo              *VideoInfo              `protobuf:"bytes,18,opt,name=video_info,json=videoInfo,proto3" json:"video_info,omitempty"`
	ApplicationUsageReport *ApplicationUsageReport `protobuf:"bytes,19,opt,name=application_usage_report,json=applicationUsageReport,proto3" json:"application_usage_report,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ActivityLogRequest) Reset() {
	*x = ActivityLogRequest{}
	mi := &file_proto_monitor_type_activity_log_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivityLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityLogRequest) ProtoMessage() {}

func (x *ActivityLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitor_type_activity_log_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityLogRequest.ProtoReflect.Descriptor instead.
func (*ActivityLogRequest) Descriptor() ([]byte, []int) {
	return file_proto_monitor_type_activity_log_proto_rawDescGZIP(), []int{0}
}

func (x *ActivityLogRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ActivityLogRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ActivityLogRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ActivityLogRequest) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *ActivityLogRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ActivityLogRequest) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *ActivityLogRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *ActivityLogRequest) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *ActivityLogRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ActivityLogRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ActivityLogRequest) GetActivityInfo() *ActivityInfo {
	if x != nil {
		return x.ActivityInfo
	}
	return nil
}

func (x *ActivityLogRequest) GetUserActivityInfo() *UserActivityInfo {
	if x != nil {
		return x.UserActivityInfo
	}
	return nil
}

func (x *ActivityLogRequest) GetSystemStatusInfo() *SystemStatusInfo {
	if x != nil {
		return x.SystemStatusInfo
	}
	return nil
}

func (x *ActivityLogRequest) GetUsbDeviceInfo() *USBDeviceInfo {
	if x != nil {
		return x.UsbDeviceInfo
	}
	return nil
}

func (x *ActivityLogRequest) GetLocationInfo() *LocationInfo {
	if x != nil {
		return x.LocationInfo
	}
	return nil
}

func (x *ActivityLogRequest) GetNetworkStatus() *NetworkStatus {
	if x != nil {
		return x.NetworkStatus
	}
	return nil
}

func (x *ActivityLogRequest) GetScreenshotInfo() *ScreenshotInfo {
	if x != nil {
		return x.ScreenshotInfo
	}
	return nil
}

func (x *ActivityLogRequest) GetVideoInfo() *VideoInfo {
	if x != nil {
		return x.VideoInfo
	}
	return nil
}

func (x *ActivityLogRequest) GetApplicationUsageReport() *ApplicationUsageReport {
	if x != nil {
		return x.ApplicationUsageReport
	}
	return nil
}

// ActivityLogBatchRequest contains multiple activity log entries
type ActivityLogBatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entries       []*ActivityLogRequest  `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActivityLogBatchRequest) Reset() {
	*x = ActivityLogBatchRequest{}
	mi := &file_proto_monitor_type_activity_log_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivityLogBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityLogBatchRequest) ProtoMessage() {}

func (x *ActivityLogBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitor_type_activity_log_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityLogBatchRequest.ProtoReflect.Descriptor instead.
func (*ActivityLogBatchRequest) Descriptor() ([]byte, []int) {
	return file_proto_monitor_type_activity_log_proto_rawDescGZIP(), []int{1}
}

func (x *ActivityLogBatchRequest) GetEntries() []*ActivityLogRequest {
	if x != nil {
		return x.Entries
	}
	return nil
}

// ActivityLogResponse confirms log receipt
type ActivityLogResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Success          bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message          string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	EntriesProcessed int32                  `protobuf:"varint,3,opt,name=entries_processed,json=entriesProcessed,proto3" json:"entries_processed,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ActivityLogResponse) Reset() {
	*x = ActivityLogResponse{}
	mi := &file_proto_monitor_type_activity_log_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivityLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityLogResponse) ProtoMessage() {}

func (x *ActivityLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitor_type_activity_log_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityLogResponse.ProtoReflect.Descriptor instead.
func (*ActivityLogResponse) Descriptor() ([]byte, []int) {
	return file_proto_monitor_type_activity_log_proto_rawDescGZIP(), []int{2}
}

func (x *ActivityLogResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ActivityLogResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ActivityLogResponse) GetEntriesProcessed() int32 {
	if x != nil {
		return x.EntriesProcessed
	}
	return 0
}

// ActivityInfo represents current activity information
type ActivityInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	AppName       string                 `protobuf:"bytes,2,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	WindowTitle   string                 `protobuf:"bytes,3,opt,name=window_title,json=windowTitle,proto3" json:"window_title,omitempty"`
	DocumentName  string                 `protobuf:"bytes,4,opt,name=document_name,json=documentName,proto3" json:"document_name,omitempty"`
	BrowserUrl    string                 `protobuf:"bytes,5,opt,name=browser_url,json=browserUrl,proto3" json:"browser_url,omitempty"`
	IsIncognito   bool                   `protobuf:"varint,6,opt,name=is_incognito,json=isIncognito,proto3" json:"is_incognito,omitempty"`
	ProcessId     int32                  `protobuf:"varint,7,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActivityInfo) Reset() {
	*x = ActivityInfo{}
	mi := &file_proto_monitor_type_activity_log_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityInfo) ProtoMessage() {}

func (x *ActivityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitor_type_activity_log_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityInfo.ProtoReflect.Descriptor instead.
func (*ActivityInfo) Descriptor() ([]byte, []int) {
	return file_proto_monitor_type_activity_log_proto_rawDescGZIP(), []int{3}
}

func (x *ActivityInfo) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ActivityInfo) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *ActivityInfo) GetWindowTitle() string {
	if x != nil {
		return x.WindowTitle
	}
	return ""
}

func (x *ActivityInfo) GetDocumentName() string {
	if x != nil {
		return x.DocumentName
	}
	return ""
}

func (x *ActivityInfo) GetBrowserUrl() string {
	if x != nil {
		return x.BrowserUrl
	}
	return ""
}

func (x *ActivityInfo) GetIsIncognito() bool {
	if x != nil {
		return x.IsIncognito
	}
	return false
}

func (x *ActivityInfo) GetProcessId() int32 {
	if x != nil {
		return x.ProcessId
	}
	return 0
}

// UserActivityInfo represents user activity status
type UserActivityInfo struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Status                 string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // "Active" or "Idle"
	Timestamp              *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	IdleDurationSeconds    float64                `protobuf:"fixed64,3,opt,name=idle_duration_seconds,json=idleDurationSeconds,proto3" json:"idle_duration_seconds,omitempty"`
	ActiveDurationSeconds  float64                `protobuf:"fixed64,4,opt,name=active_duration_seconds,json=activeDurationSeconds,proto3" json:"active_duration_seconds,omitempty"`
	OfflineDurationSeconds float64                `protobuf:"fixed64,5,opt,name=offline_duration_seconds,json=offlineDurationSeconds,proto3" json:"offline_duration_seconds,omitempty"`
	SessionDurationSeconds float64                `protobuf:"fixed64,6,opt,name=session_duration_seconds,json=sessionDurationSeconds,proto3" json:"session_duration_seconds,omitempty"`
	SleepDurationSeconds   float64                `protobuf:"fixed64,7,opt,name=sleep_duration_seconds,json=sleepDurationSeconds,proto3" json:"sleep_duration_seconds,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UserActivityInfo) Reset() {
	*x = UserActivityInfo{}
	mi := &file_proto_monitor_type_activity_log_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserActivityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserActivityInfo) ProtoMessage() {}

func (x *UserActivityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitor_type_activity_log_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserActivityInfo.ProtoReflect.Descriptor instead.
func (*UserActivityInfo) Descriptor() ([]byte, []int) {
	return file_proto_monitor_type_activity_log_proto_rawDescGZIP(), []int{4}
}

func (x *UserActivityInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserActivityInfo) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *UserActivityInfo) GetIdleDurationSeconds() float64 {
	if x != nil {
		return x.IdleDurationSeconds
	}
	return 0
}

func (x *UserActivityInfo) GetActiveDurationSeconds() float64 {
	if x != nil {
		return x.ActiveDurationSeconds
	}
	return 0
}

func (x *UserActivityInfo) GetOfflineDurationSeconds() float64 {
	if x != nil {
		return x.OfflineDurationSeconds
	}
	return 0
}

func (x *UserActivityInfo) GetSessionDurationSeconds() float64 {
	if x != nil {
		return x.SessionDurationSeconds
	}
	return 0
}

func (x *UserActivityInfo) GetSleepDurationSeconds() float64 {
	if x != nil {
		return x.SleepDurationSeconds
	}
	return 0
}

// SystemStatusInfo represents system status information
type SystemStatusInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Details       string                 `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemStatusInfo) Reset() {
	*x = SystemStatusInfo{}
	mi := &file_proto_monitor_type_activity_log_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemStatusInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemStatusInfo) ProtoMessage() {}

func (x *SystemStatusInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitor_type_activity_log_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemStatusInfo.ProtoReflect.Descriptor instead.
func (*SystemStatusInfo) Descriptor() ([]byte, []int) {
	return file_proto_monitor_type_activity_log_proto_rawDescGZIP(), []int{5}
}

func (x *SystemStatusInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SystemStatusInfo) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

// USBDeviceInfo represents USB device information
type USBDeviceInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VendorId      int32                  `protobuf:"varint,1,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	ProductId     int32                  `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	VendorName    string                 `protobuf:"bytes,3,opt,name=vendor_name,json=vendorName,proto3" json:"vendor_name,omitempty"`
	ProductName   string                 `protobuf:"bytes,4,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	Action        string                 `protobuf:"bytes,5,opt,name=action,proto3" json:"action,omitempty"` // "connected" or "disconnected"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *USBDeviceInfo) Reset() {
	*x = USBDeviceInfo{}
	mi := &file_proto_monitor_type_activity_log_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *USBDeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*USBDeviceInfo) ProtoMessage() {}

func (x *USBDeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitor_type_activity_log_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use USBDeviceInfo.ProtoReflect.Descriptor instead.
func (*USBDeviceInfo) Descriptor() ([]byte, []int) {
	return file_proto_monitor_type_activity_log_proto_rawDescGZIP(), []int{6}
}

func (x *USBDeviceInfo) GetVendorId() int32 {
	if x != nil {
		return x.VendorId
	}
	return 0
}

func (x *USBDeviceInfo) GetProductId() int32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *USBDeviceInfo) GetVendorName() string {
	if x != nil {
		return x.VendorName
	}
	return ""
}

func (x *USBDeviceInfo) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *USBDeviceInfo) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

// LocationInfo represents device location
type LocationInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	City          string                 `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	Country       string                 `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	Latitude      float64                `protobuf:"fixed64,3,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude     float64                `protobuf:"fixed64,4,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Accuracy      float64                `protobuf:"fixed64,5,opt,name=accuracy,proto3" json:"accuracy,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Available     bool                   `protobuf:"varint,7,opt,name=available,proto3" json:"available,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocationInfo) Reset() {
	*x = LocationInfo{}
	mi := &file_proto_monitor_type_activity_log_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationInfo) ProtoMessage() {}

func (x *LocationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitor_type_activity_log_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationInfo.ProtoReflect.Descriptor instead.
func (*LocationInfo) Descriptor() ([]byte, []int) {
	return file_proto_monitor_type_activity_log_proto_rawDescGZIP(), []int{7}
}

func (x *LocationInfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *LocationInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *LocationInfo) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *LocationInfo) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *LocationInfo) GetAccuracy() float64 {
	if x != nil {
		return x.Accuracy
	}
	return 0
}

func (x *LocationInfo) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *LocationInfo) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

// NetworkStatus represents network connectivity status
type NetworkStatus struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Timestamp              *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Ssid                   string                 `protobuf:"bytes,2,opt,name=ssid,proto3" json:"ssid,omitempty"`
	UptimeSeconds          float64                `protobuf:"fixed64,3,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
	DowntimeSeconds        float64                `protobuf:"fixed64,4,opt,name=downtime_seconds,json=downtimeSeconds,proto3" json:"downtime_seconds,omitempty"`
	SessionDurationSeconds float64                `protobuf:"fixed64,5,opt,name=session_duration_seconds,json=sessionDurationSeconds,proto3" json:"session_duration_seconds,omitempty"`
	IpAddress              string                 `protobuf:"bytes,6,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *NetworkStatus) Reset() {
	*x = NetworkStatus{}
	mi := &file_proto_monitor_type_activity_log_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkStatus) ProtoMessage() {}

func (x *NetworkStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitor_type_activity_log_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkStatus.ProtoReflect.Descriptor instead.
func (*NetworkStatus) Descriptor() ([]byte, []int) {
	return file_proto_monitor_type_activity_log_proto_rawDescGZIP(), []int{8}
}

func (x *NetworkStatus) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *NetworkStatus) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

func (x *NetworkStatus) GetUptimeSeconds() float64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

func (x *NetworkStatus) GetDowntimeSeconds() float64 {
	if x != nil {
		return x.DowntimeSeconds
	}
	return 0
}

func (x *NetworkStatus) GetSessionDurationSeconds() float64 {
	if x != nil {
		return x.SessionDurationSeconds
	}
	return 0
}

func (x *NetworkStatus) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

// ScreenshotInfo represents screenshot metadata
type ScreenshotInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	MacAddress    string                 `protobuf:"bytes,3,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	UserId        string                 `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FilePath      string                 `protobuf:"bytes,5,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	Url           string                 `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	Domain        string                 `protobuf:"bytes,7,opt,name=domain,proto3" json:"domain,omitempty"`
	Department    string                 `protobuf:"bytes,8,opt,name=department,proto3" json:"department,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScreenshotInfo) Reset() {
	*x = ScreenshotInfo{}
	mi := &file_proto_monitor_type_activity_log_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScreenshotInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenshotInfo) ProtoMessage() {}

func (x *ScreenshotInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitor_type_activity_log_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenshotInfo.ProtoReflect.Descriptor instead.
func (*ScreenshotInfo) Descriptor() ([]byte, []int) {
	return file_proto_monitor_type_activity_log_proto_rawDescGZIP(), []int{9}
}

func (x *ScreenshotInfo) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ScreenshotInfo) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ScreenshotInfo) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *ScreenshotInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ScreenshotInfo) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *ScreenshotInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ScreenshotInfo) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ScreenshotInfo) GetDepartment() string {
	if x != nil {
		return x.Department
	}
	return ""
}

type VideoInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Filename        string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Timestamp       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	MacAddress      string                 `protobuf:"bytes,3,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	UserId          string                 `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FilePath        string                 `protobuf:"bytes,5,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	Url             string                 `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	Domain          string                 `protobuf:"bytes,7,opt,name=domain,proto3" json:"domain,omitempty"`
	Department      string                 `protobuf:"bytes,8,opt,name=department,proto3" json:"department,omitempty"`
	DurationSeconds int32                  `protobuf:"varint,9,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *VideoInfo) Reset() {
	*x = VideoInfo{}
	mi := &file_proto_monitor_type_activity_log_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VideoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoInfo) ProtoMessage() {}

func (x *VideoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitor_type_activity_log_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoInfo.ProtoReflect.Descriptor instead.
func (*VideoInfo) Descriptor() ([]byte, []int) {
	return file_proto_monitor_type_activity_log_proto_rawDescGZIP(), []int{10}
}

func (x *VideoInfo) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *VideoInfo) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *VideoInfo) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *VideoInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *VideoInfo) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *VideoInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *VideoInfo) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *VideoInfo) GetDepartment() string {
	if x != nil {
		return x.Department
	}
	return ""
}

func (x *VideoInfo) GetDurationSeconds() int32 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

// ApplicationUsage represents time spent on an application
type ApplicationUsage struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	AppName               string                 `protobuf:"bytes,1,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	Timestamp             float64                `protobuf:"fixed64,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TimeSpentTodaySeconds float64                `protobuf:"fixed64,3,opt,name=time_spent_today_seconds,json=timeSpentTodaySeconds,proto3" json:"time_spent_today_seconds,omitempty"`
	LastActiveTime        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_active_time,json=lastActiveTime,proto3" json:"last_active_time,omitempty"`
	SessionCount          int32                  `protobuf:"varint,5,opt,name=session_count,json=sessionCount,proto3" json:"session_count,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ApplicationUsage) Reset() {
	*x = ApplicationUsage{}
	mi := &file_proto_monitor_type_activity_log_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationUsage) ProtoMessage() {}

func (x *ApplicationUsage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitor_type_activity_log_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationUsage.ProtoReflect.Descriptor instead.
func (*ApplicationUsage) Descriptor() ([]byte, []int) {
	return file_proto_monitor_type_activity_log_proto_rawDescGZIP(), []int{11}
}

func (x *ApplicationUsage) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *ApplicationUsage) GetTimestamp() float64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ApplicationUsage) GetTimeSpentTodaySeconds() float64 {
	if x != nil {
		return x.TimeSpentTodaySeconds
	}
	return 0
}

func (x *ApplicationUsage) GetLastActiveTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActiveTime
	}
	return nil
}

func (x *ApplicationUsage) GetSessionCount() int32 {
	if x != nil {
		return x.SessionCount
	}
	return 0
}

// ApplicationUsageReport represents a summary of application usage
type ApplicationUsageReport struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Applications     []*ApplicationUsage    `protobuf:"bytes,1,rep,name=applications,proto3" json:"applications,omitempty"`
	TotalTimeSeconds float64                `protobuf:"fixed64,2,opt,name=total_time_seconds,json=totalTimeSeconds,proto3" json:"total_time_seconds,omitempty"`
	TopApps          []*ApplicationUsage    `protobuf:"bytes,3,rep,name=top_apps,json=topApps,proto3" json:"top_apps,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ApplicationUsageReport) Reset() {
	*x = ApplicationUsageReport{}
	mi := &file_proto_monitor_type_activity_log_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationUsageReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationUsageReport) ProtoMessage() {}

func (x *ApplicationUsageReport) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitor_type_activity_log_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationUsageReport.ProtoReflect.Descriptor instead.
func (*ApplicationUsageReport) Descriptor() ([]byte, []int) {
	return file_proto_monitor_type_activity_log_proto_rawDescGZIP(), []int{12}
}

func (x *ApplicationUsageReport) GetApplications() []*ApplicationUsage {
	if x != nil {
		return x.Applications
	}
	return nil
}

func (x *ApplicationUsageReport) GetTotalTimeSeconds() float64 {
	if x != nil {
		return x.TotalTimeSeconds
	}
	return 0
}

func (x *ApplicationUsageReport) GetTopApps() []*ApplicationUsage {
	if x != nil {
		return x.TopApps
	}
	return nil
}

var File_proto_monitor_type_activity_log_proto protoreflect.FileDescriptor

const file_proto_monitor_type_activity_log_proto_rawDesc = "" +
	"\n" +
	"%proto/monitor/type/activity_log.proto\x12\amonitor\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa0\a\n" +
	"\x12ActivityLogRequest\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1f\n" +
	"\vmac_address\x18\x04 \x01(\tR\n" +
	"macAddress\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"event_type\x18\x06 \x01(\tR\teventType\x12\x1a\n" +
	"\bhostname\x18\a \x01(\tR\bhostname\x12\x1d\n" +
	"\n" +
	"ip_address\x18\b \x01(\tR\tipAddress\x12\x1d\n" +
	"\n" +
	"session_id\x18\t \x01(\tR\tsessionId\x12\x16\n" +
	"\x06domain\x18\n" +
	" \x01(\tR\x06domain\x12:\n" +
	"\ractivity_info\x18\v \x01(\v2\x15.monitor.ActivityInfoR\factivityInfo\x12G\n" +
	"\x12user_activity_info\x18\f \x01(\v2\x19.monitor.UserActivityInfoR\x10userActivityInfo\x12G\n" +
	"\x12system_status_info\x18\r \x01(\v2\x19.monitor.SystemStatusInfoR\x10systemStatusInfo\x12>\n" +
	"\x0fusb_device_info\x18\x0e \x01(\v2\x16.monitor.USBDeviceInfoR\rusbDeviceInfo\x12:\n" +
	"\rlocation_info\x18\x0f \x01(\v2\x15.monitor.LocationInfoR\flocationInfo\x12=\n" +
	"\x0enetwork_status\x18\x10 \x01(\v2\x16.monitor.NetworkStatusR\rnetworkStatus\x12@\n" +
	"\x0fscreenshot_info\x18\x11 \x01(\v2\x17.monitor.ScreenshotInfoR\x0escreenshotInfo\x121\n" +
	"\n" +
	"video_info\x18\x12 \x01(\v2\x12.monitor.VideoInfoR\tvideoInfo\x12Y\n" +
	"\x18application_usage_report\x18\x13 \x01(\v2\x1f.monitor.ApplicationUsageReportR\x16applicationUsageReport\"P\n" +
	"\x17ActivityLogBatchRequest\x125\n" +
	"\aentries\x18\x01 \x03(\v2\x1b.monitor.ActivityLogRequestR\aentries\"v\n" +
	"\x13ActivityLogResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12+\n" +
	"\x11entries_processed\x18\x03 \x01(\x05R\x10entriesProcessed\"\x8e\x02\n" +
	"\fActivityInfo\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x19\n" +
	"\bapp_name\x18\x02 \x01(\tR\aappName\x12!\n" +
	"\fwindow_title\x18\x03 \x01(\tR\vwindowTitle\x12#\n" +
	"\rdocument_name\x18\x04 \x01(\tR\fdocumentName\x12\x1f\n" +
	"\vbrowser_url\x18\x05 \x01(\tR\n" +
	"browserUrl\x12!\n" +
	"\fis_incognito\x18\x06 \x01(\bR\visIncognito\x12\x1d\n" +
	"\n" +
	"process_id\x18\a \x01(\x05R\tprocessId\"\xfa\x02\n" +
	"\x10UserActivityInfo\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x122\n" +
	"\x15idle_duration_seconds\x18\x03 \x01(\x01R\x13idleDurationSeconds\x126\n" +
	"\x17active_duration_seconds\x18\x04 \x01(\x01R\x15activeDurationSeconds\x128\n" +
	"\x18offline_duration_seconds\x18\x05 \x01(\x01R\x16offlineDurationSeconds\x128\n" +
	"\x18session_duration_seconds\x18\x06 \x01(\x01R\x16sessionDurationSeconds\x124\n" +
	"\x16sleep_duration_seconds\x18\a \x01(\x01R\x14sleepDurationSeconds\"F\n" +
	"\x10SystemStatusInfo\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x18\n" +
	"\adetails\x18\x02 \x01(\tR\adetails\"\xa7\x01\n" +
	"\rUSBDeviceInfo\x12\x1b\n" +
	"\tvendor_id\x18\x01 \x01(\x05R\bvendorId\x12\x1d\n" +
	"\n" +
	"product_id\x18\x02 \x01(\x05R\tproductId\x12\x1f\n" +
	"\vvendor_name\x18\x03 \x01(\tR\n" +
	"vendorName\x12!\n" +
	"\fproduct_name\x18\x04 \x01(\tR\vproductName\x12\x16\n" +
	"\x06action\x18\x05 \x01(\tR\x06action\"\xea\x01\n" +
	"\fLocationInfo\x12\x12\n" +
	"\x04city\x18\x01 \x01(\tR\x04city\x12\x18\n" +
	"\acountry\x18\x02 \x01(\tR\acountry\x12\x1a\n" +
	"\blatitude\x18\x03 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x04 \x01(\x01R\tlongitude\x12\x1a\n" +
	"\baccuracy\x18\x05 \x01(\x01R\baccuracy\x128\n" +
	"\ttimestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1c\n" +
	"\tavailable\x18\a \x01(\bR\tavailable\"\x88\x02\n" +
	"\rNetworkStatus\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x12\n" +
	"\x04ssid\x18\x02 \x01(\tR\x04ssid\x12%\n" +
	"\x0euptime_seconds\x18\x03 \x01(\x01R\ruptimeSeconds\x12)\n" +
	"\x10downtime_seconds\x18\x04 \x01(\x01R\x0fdowntimeSeconds\x128\n" +
	"\x18session_duration_seconds\x18\x05 \x01(\x01R\x16sessionDurationSeconds\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x06 \x01(\tR\tipAddress\"\x87\x02\n" +
	"\x0eScreenshotInfo\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1f\n" +
	"\vmac_address\x18\x03 \x01(\tR\n" +
	"macAddress\x12\x17\n" +
	"\auser_id\x18\x04 \x01(\tR\x06userId\x12\x1b\n" +
	"\tfile_path\x18\x05 \x01(\tR\bfilePath\x12\x10\n" +
	"\x03url\x18\x06 \x01(\tR\x03url\x12\x16\n" +
	"\x06domain\x18\a \x01(\tR\x06domain\x12\x1e\n" +
	"\n" +
	"department\x18\b \x01(\tR\n" +
	"department\"\xad\x02\n" +
	"\tVideoInfo\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1f\n" +
	"\vmac_address\x18\x03 \x01(\tR\n" +
	"macAddress\x12\x17\n" +
	"\auser_id\x18\x04 \x01(\tR\x06userId\x12\x1b\n" +
	"\tfile_path\x18\x05 \x01(\tR\bfilePath\x12\x10\n" +
	"\x03url\x18\x06 \x01(\tR\x03url\x12\x16\n" +
	"\x06domain\x18\a \x01(\tR\x06domain\x12\x1e\n" +
	"\n" +
	"department\x18\b \x01(\tR\n" +
	"department\x12)\n" +
	"\x10duration_seconds\x18\t \x01(\x05R\x0fdurationSeconds\"\xef\x01\n" +
	"\x10ApplicationUsage\x12\x19\n" +
	"\bapp_name\x18\x01 \x01(\tR\aappName\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x01R\ttimestamp\x127\n" +
	"\x18time_spent_today_seconds\x18\x03 \x01(\x01R\x15timeSpentTodaySeconds\x12D\n" +
	"\x10last_active_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x0elastActiveTime\x12#\n" +
	"\rsession_count\x18\x05 \x01(\x05R\fsessionCount\"\xbb\x01\n" +
	"\x16ApplicationUsageReport\x12=\n" +
	"\fapplications\x18\x01 \x03(\v2\x19.monitor.ApplicationUsageR\fapplications\x12,\n" +
	"\x12total_time_seconds\x18\x02 \x01(\x01R\x10totalTimeSeconds\x124\n" +
	"\btop_apps\x18\x03 \x03(\v2\x19.monitor.ApplicationUsageR\atopAppsB\x12Z\x10genproto/monitorb\x06proto3"

var (
	file_proto_monitor_type_activity_log_proto_rawDescOnce sync.Once
	file_proto_monitor_type_activity_log_proto_rawDescData []byte
)

func file_proto_monitor_type_activity_log_proto_rawDescGZIP() []byte {
	file_proto_monitor_type_activity_log_proto_rawDescOnce.Do(func() {
		file_proto_monitor_type_activity_log_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_monitor_type_activity_log_proto_rawDesc), len(file_proto_monitor_type_activity_log_proto_rawDesc)))
	})
	return file_proto_monitor_type_activity_log_proto_rawDescData
}

var file_proto_monitor_type_activity_log_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_proto_monitor_type_activity_log_proto_goTypes = []any{
	(*ActivityLogRequest)(nil),      // 0: monitor.ActivityLogRequest
	(*ActivityLogBatchRequest)(nil), // 1: monitor.ActivityLogBatchRequest
	(*ActivityLogResponse)(nil),     // 2: monitor.ActivityLogResponse
	(*ActivityInfo)(nil),            // 3: monitor.ActivityInfo
	(*UserActivityInfo)(nil),        // 4: monitor.UserActivityInfo
	(*SystemStatusInfo)(nil),        // 5: monitor.SystemStatusInfo
	(*USBDeviceInfo)(nil),           // 6: monitor.USBDeviceInfo
	(*LocationInfo)(nil),            // 7: monitor.LocationInfo
	(*NetworkStatus)(nil),           // 8: monitor.NetworkStatus
	(*ScreenshotInfo)(nil),          // 9: monitor.ScreenshotInfo
	(*VideoInfo)(nil),               // 10: monitor.VideoInfo
	(*ApplicationUsage)(nil),        // 11: monitor.ApplicationUsage
	(*ApplicationUsageReport)(nil),  // 12: monitor.ApplicationUsageReport
	(*timestamppb.Timestamp)(nil),   // 13: google.protobuf.Timestamp
}
var file_proto_monitor_type_activity_log_proto_depIdxs = []int32{
	13, // 0: monitor.ActivityLogRequest.timestamp:type_name -> google.protobuf.Timestamp
	3,  // 1: monitor.ActivityLogRequest.activity_info:type_name -> monitor.ActivityInfo
	4,  // 2: monitor.ActivityLogRequest.user_activity_info:type_name -> monitor.UserActivityInfo
	5,  // 3: monitor.ActivityLogRequest.system_status_info:type_name -> monitor.SystemStatusInfo
	6,  // 4: monitor.ActivityLogRequest.usb_device_info:type_name -> monitor.USBDeviceInfo
	7,  // 5: monitor.ActivityLogRequest.location_info:type_name -> monitor.LocationInfo
	8,  // 6: monitor.ActivityLogRequest.network_status:type_name -> monitor.NetworkStatus
	9,  // 7: monitor.ActivityLogRequest.screenshot_info:type_name -> monitor.ScreenshotInfo
	10, // 8: monitor.ActivityLogRequest.video_info:type_name -> monitor.VideoInfo
	12, // 9: monitor.ActivityLogRequest.application_usage_report:type_name -> monitor.ApplicationUsageReport
	0,  // 10: monitor.ActivityLogBatchRequest.entries:type_name -> monitor.ActivityLogRequest
	13, // 11: monitor.ActivityInfo.timestamp:type_name -> google.protobuf.Timestamp
	13, // 12: monitor.UserActivityInfo.timestamp:type_name -> google.protobuf.Timestamp
	13, // 13: monitor.LocationInfo.timestamp:type_name -> google.protobuf.Timestamp
	13, // 14: monitor.NetworkStatus.timestamp:type_name -> google.protobuf.Timestamp
	13, // 15: monitor.ScreenshotInfo.timestamp:type_name -> google.protobuf.Timestamp
	13, // 16: monitor.VideoInfo.timestamp:type_name -> google.protobuf.Timestamp
	13, // 17: monitor.ApplicationUsage.last_active_time:type_name -> google.protobuf.Timestamp
	11, // 18: monitor.ApplicationUsageReport.applications:type_name -> monitor.ApplicationUsage
	11, // 19: monitor.ApplicationUsageReport.top_apps:type_name -> monitor.ApplicationUsage
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_proto_monitor_type_activity_log_proto_init() }
func file_proto_monitor_type_activity_log_proto_init() {
	if File_proto_monitor_type_activity_log_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_monitor_type_activity_log_proto_rawDesc), len(file_proto_monitor_type_activity_log_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_monitor_type_activity_log_proto_goTypes,
		DependencyIndexes: file_proto_monitor_type_activity_log_proto_depIdxs,
		MessageInfos:      file_proto_monitor_type_activity_log_proto_msgTypes,
	}.Build()
	File_proto_monitor_type_activity_log_proto = out.File
	file_proto_monitor_type_activity_log_proto_goTypes = nil
	file_proto_monitor_type_activity_log_proto_depIdxs = nil
}
