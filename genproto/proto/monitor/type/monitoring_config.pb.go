// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.29.3
// source: proto/monitor/type/monitoring_config.proto

package monitor

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MonitoringConfigRequest requests configuration for a device
type MonitoringConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MacAddress    string                 `protobuf:"bytes,1,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	Domain        string                 `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MonitoringConfigRequest) Reset() {
	*x = MonitoringConfigRequest{}
	mi := &file_proto_monitor_type_monitoring_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonitoringConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitoringConfigRequest) ProtoMessage() {}

func (x *MonitoringConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitor_type_monitoring_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitoringConfigRequest.ProtoReflect.Descriptor instead.
func (*MonitoringConfigRequest) Descriptor() ([]byte, []int) {
	return file_proto_monitor_type_monitoring_config_proto_rawDescGZIP(), []int{0}
}

func (x *MonitoringConfigRequest) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *MonitoringConfigRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// MonitoringConfigResponse contains the monitoring configuration
type MonitoringConfigResponse struct {
	state                           protoimpl.MessageState `protogen:"open.v1"`
	StartMonitoringAfterCheckInOnly bool                   `protobuf:"varint,1,opt,name=start_monitoring_after_check_in_only,json=startMonitoringAfterCheckInOnly,proto3" json:"start_monitoring_after_check_in_only,omitempty"`
	IsCheckedIn                     bool                   `protobuf:"varint,2,opt,name=is_checked_in,json=isCheckedIn,proto3" json:"is_checked_in,omitempty"`
	IsCheckedOut                    bool                   `protobuf:"varint,3,opt,name=is_checked_out,json=isCheckedOut,proto3" json:"is_checked_out,omitempty"`
	UserId                          string                 `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MacAddress                      string                 `protobuf:"bytes,5,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	Name                            string                 `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Domain                          string                 `protobuf:"bytes,7,opt,name=domain,proto3" json:"domain,omitempty"`
	Department                      string                 `protobuf:"bytes,8,opt,name=department,proto3" json:"department,omitempty"`
	Email                           string                 `protobuf:"bytes,9,opt,name=email,proto3" json:"email,omitempty"`
	MonitoringEnabled               bool                   `protobuf:"varint,10,opt,name=monitoring_enabled,json=monitoringEnabled,proto3" json:"monitoring_enabled,omitempty"`
	IdleThreshold                   int32                  `protobuf:"varint,11,opt,name=idle_threshold,json=idleThreshold,proto3" json:"idle_threshold,omitempty"`
	ScreenshotInterval              int32                  `protobuf:"varint,12,opt,name=screenshot_interval,json=screenshotInterval,proto3" json:"screenshot_interval,omitempty"`
	CheckInterval                   int32                  `protobuf:"varint,13,opt,name=check_interval,json=checkInterval,proto3" json:"check_interval,omitempty"`
	LocationInterval                int32                  `protobuf:"varint,14,opt,name=location_interval,json=locationInterval,proto3" json:"location_interval,omitempty"`
	TrackApplications               bool                   `protobuf:"varint,15,opt,name=track_applications,json=trackApplications,proto3" json:"track_applications,omitempty"`
	TrackLocation                   bool                   `protobuf:"varint,16,opt,name=track_location,json=trackLocation,proto3" json:"track_location,omitempty"`
	TrackBrowser                    bool                   `protobuf:"varint,17,opt,name=track_browser,json=trackBrowser,proto3" json:"track_browser,omitempty"`
	TrackDocuments                  bool                   `protobuf:"varint,18,opt,name=track_documents,json=trackDocuments,proto3" json:"track_documents,omitempty"`
	TrackUsb                        bool                   `protobuf:"varint,19,opt,name=track_usb,json=trackUsb,proto3" json:"track_usb,omitempty"`
	ScreenshotPath                  string                 `protobuf:"bytes,20,opt,name=screenshot_path,json=screenshotPath,proto3" json:"screenshot_path,omitempty"`
	FrontendUrl                     string                 `protobuf:"bytes,21,opt,name=frontend_url,json=frontendUrl,proto3" json:"frontend_url,omitempty"`
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *MonitoringConfigResponse) Reset() {
	*x = MonitoringConfigResponse{}
	mi := &file_proto_monitor_type_monitoring_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonitoringConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitoringConfigResponse) ProtoMessage() {}

func (x *MonitoringConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitor_type_monitoring_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitoringConfigResponse.ProtoReflect.Descriptor instead.
func (*MonitoringConfigResponse) Descriptor() ([]byte, []int) {
	return file_proto_monitor_type_monitoring_config_proto_rawDescGZIP(), []int{1}
}

func (x *MonitoringConfigResponse) GetStartMonitoringAfterCheckInOnly() bool {
	if x != nil {
		return x.StartMonitoringAfterCheckInOnly
	}
	return false
}

func (x *MonitoringConfigResponse) GetIsCheckedIn() bool {
	if x != nil {
		return x.IsCheckedIn
	}
	return false
}

func (x *MonitoringConfigResponse) GetIsCheckedOut() bool {
	if x != nil {
		return x.IsCheckedOut
	}
	return false
}

func (x *MonitoringConfigResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MonitoringConfigResponse) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *MonitoringConfigResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MonitoringConfigResponse) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *MonitoringConfigResponse) GetDepartment() string {
	if x != nil {
		return x.Department
	}
	return ""
}

func (x *MonitoringConfigResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *MonitoringConfigResponse) GetMonitoringEnabled() bool {
	if x != nil {
		return x.MonitoringEnabled
	}
	return false
}

func (x *MonitoringConfigResponse) GetIdleThreshold() int32 {
	if x != nil {
		return x.IdleThreshold
	}
	return 0
}

func (x *MonitoringConfigResponse) GetScreenshotInterval() int32 {
	if x != nil {
		return x.ScreenshotInterval
	}
	return 0
}

func (x *MonitoringConfigResponse) GetCheckInterval() int32 {
	if x != nil {
		return x.CheckInterval
	}
	return 0
}

func (x *MonitoringConfigResponse) GetLocationInterval() int32 {
	if x != nil {
		return x.LocationInterval
	}
	return 0
}

func (x *MonitoringConfigResponse) GetTrackApplications() bool {
	if x != nil {
		return x.TrackApplications
	}
	return false
}

func (x *MonitoringConfigResponse) GetTrackLocation() bool {
	if x != nil {
		return x.TrackLocation
	}
	return false
}

func (x *MonitoringConfigResponse) GetTrackBrowser() bool {
	if x != nil {
		return x.TrackBrowser
	}
	return false
}

func (x *MonitoringConfigResponse) GetTrackDocuments() bool {
	if x != nil {
		return x.TrackDocuments
	}
	return false
}

func (x *MonitoringConfigResponse) GetTrackUsb() bool {
	if x != nil {
		return x.TrackUsb
	}
	return false
}

func (x *MonitoringConfigResponse) GetScreenshotPath() string {
	if x != nil {
		return x.ScreenshotPath
	}
	return ""
}

func (x *MonitoringConfigResponse) GetFrontendUrl() string {
	if x != nil {
		return x.FrontendUrl
	}
	return ""
}

var File_proto_monitor_type_monitoring_config_proto protoreflect.FileDescriptor

const file_proto_monitor_type_monitoring_config_proto_rawDesc = "" +
	"\n" +
	"*proto/monitor/type/monitoring_config.proto\x12\amonitor\"R\n" +
	"\x17MonitoringConfigRequest\x12\x1f\n" +
	"\vmac_address\x18\x01 \x01(\tR\n" +
	"macAddress\x12\x16\n" +
	"\x06domain\x18\x02 \x01(\tR\x06domain\"\xb7\x06\n" +
	"\x18MonitoringConfigResponse\x12M\n" +
	"$start_monitoring_after_check_in_only\x18\x01 \x01(\bR\x1fstartMonitoringAfterCheckInOnly\x12\"\n" +
	"\ris_checked_in\x18\x02 \x01(\bR\visCheckedIn\x12$\n" +
	"\x0eis_checked_out\x18\x03 \x01(\bR\fisCheckedOut\x12\x17\n" +
	"\auser_id\x18\x04 \x01(\tR\x06userId\x12\x1f\n" +
	"\vmac_address\x18\x05 \x01(\tR\n" +
	"macAddress\x12\x12\n" +
	"\x04name\x18\x06 \x01(\tR\x04name\x12\x16\n" +
	"\x06domain\x18\a \x01(\tR\x06domain\x12\x1e\n" +
	"\n" +
	"department\x18\b \x01(\tR\n" +
	"department\x12\x14\n" +
	"\x05email\x18\t \x01(\tR\x05email\x12-\n" +
	"\x12monitoring_enabled\x18\n" +
	" \x01(\bR\x11monitoringEnabled\x12%\n" +
	"\x0eidle_threshold\x18\v \x01(\x05R\ridleThreshold\x12/\n" +
	"\x13screenshot_interval\x18\f \x01(\x05R\x12screenshotInterval\x12%\n" +
	"\x0echeck_interval\x18\r \x01(\x05R\rcheckInterval\x12+\n" +
	"\x11location_interval\x18\x0e \x01(\x05R\x10locationInterval\x12-\n" +
	"\x12track_applications\x18\x0f \x01(\bR\x11trackApplications\x12%\n" +
	"\x0etrack_location\x18\x10 \x01(\bR\rtrackLocation\x12#\n" +
	"\rtrack_browser\x18\x11 \x01(\bR\ftrackBrowser\x12'\n" +
	"\x0ftrack_documents\x18\x12 \x01(\bR\x0etrackDocuments\x12\x1b\n" +
	"\ttrack_usb\x18\x13 \x01(\bR\btrackUsb\x12'\n" +
	"\x0fscreenshot_path\x18\x14 \x01(\tR\x0escreenshotPath\x12!\n" +
	"\ffrontend_url\x18\x15 \x01(\tR\vfrontendUrlB\x12Z\x10genproto/monitorb\x06proto3"

var (
	file_proto_monitor_type_monitoring_config_proto_rawDescOnce sync.Once
	file_proto_monitor_type_monitoring_config_proto_rawDescData []byte
)

func file_proto_monitor_type_monitoring_config_proto_rawDescGZIP() []byte {
	file_proto_monitor_type_monitoring_config_proto_rawDescOnce.Do(func() {
		file_proto_monitor_type_monitoring_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_monitor_type_monitoring_config_proto_rawDesc), len(file_proto_monitor_type_monitoring_config_proto_rawDesc)))
	})
	return file_proto_monitor_type_monitoring_config_proto_rawDescData
}

var file_proto_monitor_type_monitoring_config_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_monitor_type_monitoring_config_proto_goTypes = []any{
	(*MonitoringConfigRequest)(nil),  // 0: monitor.MonitoringConfigRequest
	(*MonitoringConfigResponse)(nil), // 1: monitor.MonitoringConfigResponse
}
var file_proto_monitor_type_monitoring_config_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_monitor_type_monitoring_config_proto_init() }
func file_proto_monitor_type_monitoring_config_proto_init() {
	if File_proto_monitor_type_monitoring_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_monitor_type_monitoring_config_proto_rawDesc), len(file_proto_monitor_type_monitoring_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_monitor_type_monitoring_config_proto_goTypes,
		DependencyIndexes: file_proto_monitor_type_monitoring_config_proto_depIdxs,
		MessageInfos:      file_proto_monitor_type_monitoring_config_proto_msgTypes,
	}.Build()
	File_proto_monitor_type_monitoring_config_proto = out.File
	file_proto_monitor_type_monitoring_config_proto_goTypes = nil
	file_proto_monitor_type_monitoring_config_proto_depIdxs = nil
}
