// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.20.3
// source: proto/org/type/org_leave.proto

package org

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrgLeaveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgName string `protobuf:"bytes,1,opt,name=orgName,proto3" json:"orgName,omitempty"`
	Domain  string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (x *OrgLeaveRequest) Reset() {
	*x = OrgLeaveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_org_type_org_leave_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgLeaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgLeaveRequest) ProtoMessage() {}

func (x *OrgLeaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_org_type_org_leave_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgLeaveRequest.ProtoReflect.Descriptor instead.
func (*OrgLeaveRequest) Descriptor() ([]byte, []int) {
	return file_proto_org_type_org_leave_proto_rawDescGZIP(), []int{0}
}

func (x *OrgLeaveRequest) GetOrgName() string {
	if x != nil {
		return x.OrgName
	}
	return ""
}

func (x *OrgLeaveRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type OrgLeaveConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId                       string  `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	OrgName                     string  `protobuf:"bytes,2,opt,name=orgName,proto3" json:"orgName,omitempty"`
	Title                       string  `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	IsFixed                     bool    `protobuf:"varint,4,opt,name=isFixed,proto3" json:"isFixed,omitempty"`
	Frequency                   string  `protobuf:"bytes,5,opt,name=frequency,proto3" json:"frequency,omitempty"`
	LeaveCount                  float64 `protobuf:"fixed64,6,opt,name=leaveCount,proto3" json:"leaveCount,omitempty"`
	LeaveUnit                   string  `protobuf:"bytes,7,opt,name=leaveUnit,proto3" json:"leaveUnit,omitempty"`
	MaxLeaveCount               float64 `protobuf:"fixed64,8,opt,name=maxLeaveCount,proto3" json:"maxLeaveCount,omitempty"`
	IsCarryForwardAllowed       bool    `protobuf:"varint,9,opt,name=isCarryForwardAllowed,proto3" json:"isCarryForwardAllowed,omitempty"`
	MaxCarryForwardCount        float64 `protobuf:"fixed64,10,opt,name=maxCarryForwardCount,proto3" json:"maxCarryForwardCount,omitempty"`
	BulkLeaveCount              int32   `protobuf:"varint,11,opt,name=bulkLeaveCount,proto3" json:"bulkLeaveCount,omitempty"`
	BulkLeaveNoticeInDays       int32   `protobuf:"varint,12,opt,name=bulkLeaveNoticeInDays,proto3" json:"bulkLeaveNoticeInDays,omitempty"`
	IsEncashmentAllowed         bool    `protobuf:"varint,13,opt,name=isEncashmentAllowed,proto3" json:"isEncashmentAllowed,omitempty"`
	ApplicableAfterWorkingDays  int32   `protobuf:"varint,14,opt,name=applicableAfterWorkingDays,proto3" json:"applicableAfterWorkingDays,omitempty"`
	DocumentRequired            bool    `protobuf:"varint,15,opt,name=documentRequired,proto3" json:"documentRequired,omitempty"`
	WeeklyOffAndHolidayIncluded bool    `protobuf:"varint,16,opt,name=weeklyOffAndHolidayIncluded,proto3" json:"weeklyOffAndHolidayIncluded,omitempty"`
	IsActive                    bool    `protobuf:"varint,17,opt,name=isActive,proto3" json:"isActive,omitempty"`
	Description                 string  `protobuf:"bytes,18,opt,name=description,proto3" json:"description,omitempty"`
	YearStartDate               string  `protobuf:"bytes,19,opt,name=yearStartDate,proto3" json:"yearStartDate,omitempty"`
	YearEndDate                 string  `protobuf:"bytes,20,opt,name=yearEndDate,proto3" json:"yearEndDate,omitempty"`
}

func (x *OrgLeaveConfiguration) Reset() {
	*x = OrgLeaveConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_org_type_org_leave_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgLeaveConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgLeaveConfiguration) ProtoMessage() {}

func (x *OrgLeaveConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_proto_org_type_org_leave_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgLeaveConfiguration.ProtoReflect.Descriptor instead.
func (*OrgLeaveConfiguration) Descriptor() ([]byte, []int) {
	return file_proto_org_type_org_leave_proto_rawDescGZIP(), []int{1}
}

func (x *OrgLeaveConfiguration) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *OrgLeaveConfiguration) GetOrgName() string {
	if x != nil {
		return x.OrgName
	}
	return ""
}

func (x *OrgLeaveConfiguration) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OrgLeaveConfiguration) GetIsFixed() bool {
	if x != nil {
		return x.IsFixed
	}
	return false
}

func (x *OrgLeaveConfiguration) GetFrequency() string {
	if x != nil {
		return x.Frequency
	}
	return ""
}

func (x *OrgLeaveConfiguration) GetLeaveCount() float64 {
	if x != nil {
		return x.LeaveCount
	}
	return 0
}

func (x *OrgLeaveConfiguration) GetLeaveUnit() string {
	if x != nil {
		return x.LeaveUnit
	}
	return ""
}

func (x *OrgLeaveConfiguration) GetMaxLeaveCount() float64 {
	if x != nil {
		return x.MaxLeaveCount
	}
	return 0
}

func (x *OrgLeaveConfiguration) GetIsCarryForwardAllowed() bool {
	if x != nil {
		return x.IsCarryForwardAllowed
	}
	return false
}

func (x *OrgLeaveConfiguration) GetMaxCarryForwardCount() float64 {
	if x != nil {
		return x.MaxCarryForwardCount
	}
	return 0
}

func (x *OrgLeaveConfiguration) GetBulkLeaveCount() int32 {
	if x != nil {
		return x.BulkLeaveCount
	}
	return 0
}

func (x *OrgLeaveConfiguration) GetBulkLeaveNoticeInDays() int32 {
	if x != nil {
		return x.BulkLeaveNoticeInDays
	}
	return 0
}

func (x *OrgLeaveConfiguration) GetIsEncashmentAllowed() bool {
	if x != nil {
		return x.IsEncashmentAllowed
	}
	return false
}

func (x *OrgLeaveConfiguration) GetApplicableAfterWorkingDays() int32 {
	if x != nil {
		return x.ApplicableAfterWorkingDays
	}
	return 0
}

func (x *OrgLeaveConfiguration) GetDocumentRequired() bool {
	if x != nil {
		return x.DocumentRequired
	}
	return false
}

func (x *OrgLeaveConfiguration) GetWeeklyOffAndHolidayIncluded() bool {
	if x != nil {
		return x.WeeklyOffAndHolidayIncluded
	}
	return false
}

func (x *OrgLeaveConfiguration) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *OrgLeaveConfiguration) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OrgLeaveConfiguration) GetYearStartDate() string {
	if x != nil {
		return x.YearStartDate
	}
	return ""
}

func (x *OrgLeaveConfiguration) GetYearEndDate() string {
	if x != nil {
		return x.YearEndDate
	}
	return ""
}

type OrgLeaveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgName                string                   `protobuf:"bytes,1,opt,name=orgName,proto3" json:"orgName,omitempty"`
	OrgLeaveConfigurations []*OrgLeaveConfiguration `protobuf:"bytes,2,rep,name=orgLeaveConfigurations,proto3" json:"orgLeaveConfigurations,omitempty"`
}

func (x *OrgLeaveResponse) Reset() {
	*x = OrgLeaveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_org_type_org_leave_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgLeaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgLeaveResponse) ProtoMessage() {}

func (x *OrgLeaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_org_type_org_leave_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgLeaveResponse.ProtoReflect.Descriptor instead.
func (*OrgLeaveResponse) Descriptor() ([]byte, []int) {
	return file_proto_org_type_org_leave_proto_rawDescGZIP(), []int{2}
}

func (x *OrgLeaveResponse) GetOrgName() string {
	if x != nil {
		return x.OrgName
	}
	return ""
}

func (x *OrgLeaveResponse) GetOrgLeaveConfigurations() []*OrgLeaveConfiguration {
	if x != nil {
		return x.OrgLeaveConfigurations
	}
	return nil
}

var File_proto_org_type_org_leave_proto protoreflect.FileDescriptor

var file_proto_org_type_org_leave_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x72, 0x67, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x2f, 0x6f, 0x72, 0x67, 0x5f, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x03, 0x6f, 0x72, 0x67, 0x22, 0x43, 0x0a, 0x0f, 0x4f, 0x72, 0x67, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0xa7, 0x06, 0x0a, 0x15, 0x4f,
	0x72, 0x67, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72,
	0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x67,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73,
	0x46, 0x69, 0x78, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x46,
	0x69, 0x78, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x55, 0x6e, 0x69, 0x74,
	0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x69, 0x73, 0x43, 0x61, 0x72, 0x72,
	0x79, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x73, 0x43, 0x61, 0x72, 0x72, 0x79, 0x46, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x14,
	0x6d, 0x61, 0x78, 0x43, 0x61, 0x72, 0x72, 0x79, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x6d, 0x61, 0x78, 0x43,
	0x61, 0x72, 0x72, 0x79, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x62, 0x75, 0x6c, 0x6b, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x62, 0x75, 0x6c, 0x6b, 0x4c, 0x65,
	0x61, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x62, 0x75, 0x6c, 0x6b,
	0x4c, 0x65, 0x61, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x44, 0x61, 0x79,
	0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x62, 0x75, 0x6c, 0x6b, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x12, 0x30,
	0x0a, 0x13, 0x69, 0x73, 0x45, 0x6e, 0x63, 0x61, 0x73, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x73, 0x45,
	0x6e, 0x63, 0x61, 0x73, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x12, 0x3e, 0x0a, 0x1a, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x1a, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c, 0x65,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x79, 0x73,
	0x12, 0x2a, 0x0a, 0x10, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x1b,
	0x77, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x4f, 0x66, 0x66, 0x41, 0x6e, 0x64, 0x48, 0x6f, 0x6c, 0x69,
	0x64, 0x61, 0x79, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1b, 0x77, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x4f, 0x66, 0x66, 0x41, 0x6e, 0x64, 0x48,
	0x6f, 0x6c, 0x69, 0x64, 0x61, 0x79, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d,
	0x79, 0x65, 0x61, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x79, 0x65, 0x61, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x79, 0x65, 0x61, 0x72, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x79, 0x65, 0x61, 0x72, 0x45, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x10, 0x4f, 0x72, 0x67, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x67,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x52, 0x0a, 0x16, 0x6f, 0x72, 0x67, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x4f, 0x72, 0x67, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x16, 0x6f, 0x72, 0x67, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x0e, 0x5a, 0x0c, 0x67, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x72, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_org_type_org_leave_proto_rawDescOnce sync.Once
	file_proto_org_type_org_leave_proto_rawDescData = file_proto_org_type_org_leave_proto_rawDesc
)

func file_proto_org_type_org_leave_proto_rawDescGZIP() []byte {
	file_proto_org_type_org_leave_proto_rawDescOnce.Do(func() {
		file_proto_org_type_org_leave_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_org_type_org_leave_proto_rawDescData)
	})
	return file_proto_org_type_org_leave_proto_rawDescData
}

var file_proto_org_type_org_leave_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_org_type_org_leave_proto_goTypes = []interface{}{
	(*OrgLeaveRequest)(nil),       // 0: org.OrgLeaveRequest
	(*OrgLeaveConfiguration)(nil), // 1: org.OrgLeaveConfiguration
	(*OrgLeaveResponse)(nil),      // 2: org.OrgLeaveResponse
}
var file_proto_org_type_org_leave_proto_depIdxs = []int32{
	1, // 0: org.OrgLeaveResponse.orgLeaveConfigurations:type_name -> org.OrgLeaveConfiguration
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_org_type_org_leave_proto_init() }
func file_proto_org_type_org_leave_proto_init() {
	if File_proto_org_type_org_leave_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_org_type_org_leave_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgLeaveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_org_type_org_leave_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgLeaveConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_org_type_org_leave_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgLeaveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_org_type_org_leave_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_org_type_org_leave_proto_goTypes,
		DependencyIndexes: file_proto_org_type_org_leave_proto_depIdxs,
		MessageInfos:      file_proto_org_type_org_leave_proto_msgTypes,
	}.Build()
	File_proto_org_type_org_leave_proto = out.File
	file_proto_org_type_org_leave_proto_rawDesc = nil
	file_proto_org_type_org_leave_proto_goTypes = nil
	file_proto_org_type_org_leave_proto_depIdxs = nil
}
