// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.29.3
// source: proto/monitor/type/heartbeat.proto

package monitor

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// HeartbeatRequest represents a heartbeat request from the client
type HeartbeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EmployeeId    string                 `protobuf:"bytes,1,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	Domain        string                 `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_proto_monitor_type_heartbeat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitor_type_heartbeat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_proto_monitor_type_heartbeat_proto_rawDescGZIP(), []int{0}
}

func (x *HeartbeatRequest) GetEmployeeId() string {
	if x != nil {
		return x.EmployeeId
	}
	return ""
}

func (x *HeartbeatRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

// HeartbeatResponse represents the server's response to a heartbeat
type HeartbeatResponse struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Day                    int32                  `protobuf:"varint,1,opt,name=day,proto3" json:"day,omitempty"`
	Month                  int32                  `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	Year                   int32                  `protobuf:"varint,3,opt,name=year,proto3" json:"year,omitempty"`
	IsCheckedIn            bool                   `protobuf:"varint,4,opt,name=is_checked_in,json=isCheckedIn,proto3" json:"is_checked_in,omitempty"`
	CheckinTimestamp       string                 `protobuf:"bytes,5,opt,name=checkin_timestamp,json=checkinTimestamp,proto3" json:"checkin_timestamp,omitempty"` // RFC3339 formatted timestamp
	CheckinSource          string                 `protobuf:"bytes,6,opt,name=checkin_source,json=checkinSource,proto3" json:"checkin_source,omitempty"`
	IsCheckedOut           bool                   `protobuf:"varint,7,opt,name=is_checked_out,json=isCheckedOut,proto3" json:"is_checked_out,omitempty"`
	CheckoutTimestamp      string                 `protobuf:"bytes,8,opt,name=checkout_timestamp,json=checkoutTimestamp,proto3" json:"checkout_timestamp,omitempty"` // RFC3339 formatted timestamp
	CheckoutSource         string                 `protobuf:"bytes,9,opt,name=checkout_source,json=checkoutSource,proto3" json:"checkout_source,omitempty"`
	IsOnLeave              bool                   `protobuf:"varint,10,opt,name=is_on_leave,json=isOnLeave,proto3" json:"is_on_leave,omitempty"`
	IsHoliday              bool                   `protobuf:"varint,11,opt,name=is_holiday,json=isHoliday,proto3" json:"is_holiday,omitempty"`
	IsWeeklyOffDay         bool                   `protobuf:"varint,12,opt,name=is_weekly_off_day,json=isWeeklyOffDay,proto3" json:"is_weekly_off_day,omitempty"`
	IsAttendanceFetchError bool                   `protobuf:"varint,13,opt,name=is_attendance_fetch_error,json=isAttendanceFetchError,proto3" json:"is_attendance_fetch_error,omitempty"`
	Message                string                 `protobuf:"bytes,14,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_proto_monitor_type_heartbeat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_monitor_type_heartbeat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_proto_monitor_type_heartbeat_proto_rawDescGZIP(), []int{1}
}

func (x *HeartbeatResponse) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

func (x *HeartbeatResponse) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *HeartbeatResponse) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *HeartbeatResponse) GetIsCheckedIn() bool {
	if x != nil {
		return x.IsCheckedIn
	}
	return false
}

func (x *HeartbeatResponse) GetCheckinTimestamp() string {
	if x != nil {
		return x.CheckinTimestamp
	}
	return ""
}

func (x *HeartbeatResponse) GetCheckinSource() string {
	if x != nil {
		return x.CheckinSource
	}
	return ""
}

func (x *HeartbeatResponse) GetIsCheckedOut() bool {
	if x != nil {
		return x.IsCheckedOut
	}
	return false
}

func (x *HeartbeatResponse) GetCheckoutTimestamp() string {
	if x != nil {
		return x.CheckoutTimestamp
	}
	return ""
}

func (x *HeartbeatResponse) GetCheckoutSource() string {
	if x != nil {
		return x.CheckoutSource
	}
	return ""
}

func (x *HeartbeatResponse) GetIsOnLeave() bool {
	if x != nil {
		return x.IsOnLeave
	}
	return false
}

func (x *HeartbeatResponse) GetIsHoliday() bool {
	if x != nil {
		return x.IsHoliday
	}
	return false
}

func (x *HeartbeatResponse) GetIsWeeklyOffDay() bool {
	if x != nil {
		return x.IsWeeklyOffDay
	}
	return false
}

func (x *HeartbeatResponse) GetIsAttendanceFetchError() bool {
	if x != nil {
		return x.IsAttendanceFetchError
	}
	return false
}

func (x *HeartbeatResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_monitor_type_heartbeat_proto protoreflect.FileDescriptor

const file_proto_monitor_type_heartbeat_proto_rawDesc = "" +
	"\n" +
	"\"proto/monitor/type/heartbeat.proto\x12\amonitor\"K\n" +
	"\x10HeartbeatRequest\x12\x1f\n" +
	"\vemployee_id\x18\x01 \x01(\tR\n" +
	"employeeId\x12\x16\n" +
	"\x06domain\x18\x02 \x01(\tR\x06domain\"\x84\x04\n" +
	"\x11HeartbeatResponse\x12\x10\n" +
	"\x03day\x18\x01 \x01(\x05R\x03day\x12\x14\n" +
	"\x05month\x18\x02 \x01(\x05R\x05month\x12\x12\n" +
	"\x04year\x18\x03 \x01(\x05R\x04year\x12\"\n" +
	"\ris_checked_in\x18\x04 \x01(\bR\visCheckedIn\x12+\n" +
	"\x11checkin_timestamp\x18\x05 \x01(\tR\x10checkinTimestamp\x12%\n" +
	"\x0echeckin_source\x18\x06 \x01(\tR\rcheckinSource\x12$\n" +
	"\x0eis_checked_out\x18\a \x01(\bR\fisCheckedOut\x12-\n" +
	"\x12checkout_timestamp\x18\b \x01(\tR\x11checkoutTimestamp\x12'\n" +
	"\x0fcheckout_source\x18\t \x01(\tR\x0echeckoutSource\x12\x1e\n" +
	"\vis_on_leave\x18\n" +
	" \x01(\bR\tisOnLeave\x12\x1d\n" +
	"\n" +
	"is_holiday\x18\v \x01(\bR\tisHoliday\x12)\n" +
	"\x11is_weekly_off_day\x18\f \x01(\bR\x0eisWeeklyOffDay\x129\n" +
	"\x19is_attendance_fetch_error\x18\r \x01(\bR\x16isAttendanceFetchError\x12\x18\n" +
	"\amessage\x18\x0e \x01(\tR\amessageB\x12Z\x10genproto/monitorb\x06proto3"

var (
	file_proto_monitor_type_heartbeat_proto_rawDescOnce sync.Once
	file_proto_monitor_type_heartbeat_proto_rawDescData []byte
)

func file_proto_monitor_type_heartbeat_proto_rawDescGZIP() []byte {
	file_proto_monitor_type_heartbeat_proto_rawDescOnce.Do(func() {
		file_proto_monitor_type_heartbeat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_monitor_type_heartbeat_proto_rawDesc), len(file_proto_monitor_type_heartbeat_proto_rawDesc)))
	})
	return file_proto_monitor_type_heartbeat_proto_rawDescData
}

var file_proto_monitor_type_heartbeat_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_monitor_type_heartbeat_proto_goTypes = []any{
	(*HeartbeatRequest)(nil),  // 0: monitor.HeartbeatRequest
	(*HeartbeatResponse)(nil), // 1: monitor.HeartbeatResponse
}
var file_proto_monitor_type_heartbeat_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_monitor_type_heartbeat_proto_init() }
func file_proto_monitor_type_heartbeat_proto_init() {
	if File_proto_monitor_type_heartbeat_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_monitor_type_heartbeat_proto_rawDesc), len(file_proto_monitor_type_heartbeat_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_monitor_type_heartbeat_proto_goTypes,
		DependencyIndexes: file_proto_monitor_type_heartbeat_proto_depIdxs,
		MessageInfos:      file_proto_monitor_type_heartbeat_proto_msgTypes,
	}.Build()
	File_proto_monitor_type_heartbeat_proto = out.File
	file_proto_monitor_type_heartbeat_proto_goTypes = nil
	file_proto_monitor_type_heartbeat_proto_depIdxs = nil
}
